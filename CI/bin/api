#!/data/Software/mydan/perl/bin/perl -I/data/Software/mydan/CI/lib -I/data/Software/mydan/CI/private/lib
$0="ci_api";

use HTTP::Server::Simple::PSGI;

*HTTP::Server::Simple::PSGI::_handle_response = sub
{

    my ($self, $res) = @_;

    my $message = $StatusCode{$res->[0]};

    my $response = "HTTP/1.0 $res->[0] $message\015\012";
    my $headers = $res->[1];
    while (my ($k, $v) = splice(@$headers, 0, 2)) {
        $response .= "$k: $v\015\012";
    }
    $response .= "\015\012";

    print STDOUT $response;

    my $body = $res->[2];
    my $cb = sub {
        use Encode;
        Encode::_utf8_off( $_[0] );
        print STDOUT $_[0]
    };

    if (defined $body) {
        if (ref $body eq 'ARRAY') {
            for my $line (@$body) {
                $cb->($line) if length $line;
            }
        } else {
            local $/ = \65536 unless ref $/;
            while (defined(my $line = $body->getline)) {
                $cb->($line) if length $line;
            }
            $body->close;
        }
    } else {
        return HTTP::Server::Simple::PSGI::Writer->new($cb);
    }

};

use Dancer;
use api::group;
use api::project;
use api::rely;
use api::version;
use api::dockershell;
use api::webhooks;
use api::release;
use api::favorites;
use api::ticket;
use api::images;
use api::monitor;
use api::gitreport;
use api::monreport;
use api::flowreport;
use api::kubernetes::app;
use api::kubernetes::app::describe;
use api::kubernetes::app::set;
use api::kubernetes::hpa;
use api::kubernetes::secret;
use api::kubernetes::configmap;
use api::kubernetes::cluster;
use api::kubernetes::node;
use api::kubernetes::shell;
use api::kubernetes::data;
use api::kubernetes::endpoint;
use api::kubernetes::ingress;
use api::kubernetes::service;
use api::kubernetes::deployment;
use api::kubernetes::daemonset;
use api::kubernetes::statefulset;
use api::kubernetes::namespace;
use api::kubernetes::harbor;
use api::kubernetes::util;
use api::kubernetes::nodecheck;
use api::kubernetes::k8sbackup;
use api::kubernetes::namespaceauth;
use api::assignment;
use api::k8stree;
use api::awsecs;
use api::watcher;
use api::demo;
use api::networkmonitor;
use api::c3mc::tree;
use api::c3mc::jumpserver;
use api::c3mc::cmdb;
use api::c3mc::bpm;
use api::c3mc::base;
use api::c3mc::cloud::control::tags;
use api::c3mc::cloud::control::lbinfo;
use api::to3part::safetytesting;
use api::to3part::errnode;
use api::cislave;
use api::c3mc::cislave;
use api::exalarm::huawei;
use api::exmesg;
use api::c3mc::cibranch;
use api::c3mc::citags;
use api::c3mc::cicodemerge;
use api::c3mc::cishowtarget;
use api::c3mc::serviceanalysis;
dance;

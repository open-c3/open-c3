#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import json
import os
from pathlib import Path


def add_price_to_cmdb(data_list, resource_subtype, filter_list):
    price_dir = "/data/open-c3-data/device/curr/price"
    dir_path = Path(price_dir)
    Path(dir_path).mkdir(parents=True, exist_ok=True)

    concat_condition_flag = "@"

    file_path_m = {}
    for filename in os.listdir(dir_path):
        f = os.path.join(dir_path, filename)
        if os.path.isfile(f):
            file_path_m[filename] = f
    
    for i in range(len(data_list)):
        file_path = None

        for filter_item in filter_list:
            found = False
            condition_field_list = filter_item.split(";")

            possible_filename = resource_subtype

            need_extra_match = False
            for item in condition_field_list:
                if item in data_list[i]:
                    possible_filename += concat_condition_flag + str(data_list[i][item])
                else:
                    possible_filename += concat_condition_flag + str(item)
                    if "." in item:
                        # 条件字段里的值可能是层级字段，比如 Placement.Zone
                        need_extra_match = True
            if possible_filename in file_path_m:
                file_path = file_path_m[possible_filename]
                found = True
                break
            
            if need_extra_match:
                possible_filename = resource_subtype
                for item in condition_field_list:
                    if item in data_list[i]:
                        possible_filename += concat_condition_flag + str(data_list[i][item])
                    else:
                        v = data_list[i]
                        for item in item.split("."):
                            v = v[item]
                        possible_filename += concat_condition_flag + str(v)
                if possible_filename in file_path_m:
                    file_path = file_path_m[possible_filename]
                    found = True
                    break

                if not found and item in file_path_m:
                    # 用不带资源类型前缀的名称再匹配一次, 支持不带资源类型前缀的实例ID价格文件
                    file_path = file_path_m[item]
                    found = True
                    break
            if found:
                break

        if file_path is None:
            # _pricestat_ 为0表示没有找到匹配的价格
            data_list[i]["_pricestat_"] = 0
        else:
            parts = open(file_path, 'r').read().split()
            if len(parts) != 2:
                raise Exception("价格文件里缺少价格或者货币类型, 涉及到的文件是: " + file_path)
            data_list[i]["_price_"] = parts[0]
            data_list[i]["_priceunit_"] = parts[1]
            data_list[i]["_pricestat_"] = 1
        
    return data_list


def main(data_list, resource_subtype, filter_list):
    result = add_price_to_cmdb(data_list, resource_subtype, filter_list)
    for item in result:
        print(json.dumps(item, default=str))
    

if __name__ == '__main__':
    data_list = []
    for line in sys.stdin:
        data_list.append(json.loads(line))

    main(data_list, sys.argv[1], sys.argv[2:])

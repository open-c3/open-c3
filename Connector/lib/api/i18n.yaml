仪表盘: 'DashBoard'
监控: 'Mon'
监控看板: 'Mon Dashbord'
监控事件:  'Mon Event'
监控配置: 'Mon Config'
报警组管理: 'AlarmGroup management'
值班管理: 'OnCall'
监控告警报告: 'Mon alarm report'
主机低利用率: 'Host low utilization'
邮件监控: 'Email Monitor'
故障自愈: 'Fault self-healing'
流水线: 'Flow'
快速执行: 'QuickRun'
启动任务: 'Start Task'
脚本执行: 'Script Execution'
分发文件: 'Sync file'
发起审批: 'Run a approval'
虚拟终端: 'WebShell'
文件发送: 'File Control'
业务管理: 'Business'
作业管理: 'job management'
账户管理: 'Account management'
文件管理: 'file management'
脚本管理: 'Script Management'
机器分组: 'NodeGroup'
机器分批: 'NodeBatch'
机器管理: 'Node management'
报警通知: 'Alarm notification'
定时作业: 'crontab'
代理设置(AGENT安装): 'Proxy settings (AGENT install)'
变量查看: 'Variable View'
轻应用: 'LightAPP'
容器集群: 'Container'
应用管理: 'Service manage'
工单: 'Ticket'
文档: 'Docs'
报告: 'Report'
执行历史: 'Task History'
分组任务: 'GroupTasks'
作业任务: 'JobTasks'
虚拟终端: 'WebShell'
监控告警: 'Mon alarm'
管理: 'Manage'
全局信息: 'Global Info'
通知管理: 'Notify manage'
模板管理: 'Template Manage'
系统参数: 'Sysctl'
监控信息: 'System monitor'
审计日志: 'Audit Log'
轻应用配置: 'LightAPP config'
地址簿管理: 'Address Book Manage'
ACK管理: 'ACK Manage'
作业平台: 'JOB'
监控系统-服务树继承解除: 'Mon - Tree un Inheritance'
用户部门关系绑定: 'User department relation binding'
私有节点管理: 'Private node manage'
CI任务监视器: 'CI Task Monitor'
网络监视器: 'Network Monitor'
管理员审批管理: 'Approval manage'
云监控: 'Cloud Mon'
连接器: 'Connector'
设置连接器: 'Set Connector'
用户管理: 'User Manage'
权限管理: 'Permission Manage'
编辑服务树节点: 'Edit Tree Node'
编辑服务树资源: 'Edit Tree Resource'
给我的邮件: 'Mail To Me'
给我的短信: 'Message To Me'
用户: 'User'
组织: 'Organization'
我的收藏夹: 'My Favorite'
我的审批: 'My Approval'
我的ACK: 'My ACK'
告警事件: 'Alarm Event'
操作协助: 'Operation Assistance'
我的凭据: 'My Credentials'
我的镜像: 'My Images'
版本信息: 'Version Info'
修改密码: 'Change Password'
登出: 'Logout'
业务主机数: 'node hosts'
常用作业数: 'Common job'
本月执行任务数: 'Tasks executed this month'
成功: 'Success'
失败: 'Fail'
执行中: 'Running'
定时任务数: 'Scheduled Tasks'
启动: 'Start-Up'
暂停: 'Pause'
历史任务执行情况: 'Historical Task Execution'
任务执行时长统计: 'Statistics task Duration'
最近任务执行记录: 'Recent Task Execution Record'
更多: 'More'
执行用户: 'Executor'
当前状态: 'Status'
作业名称: 'JobName'
全局搜索: 'Global Search'
数量: 'Quantity'
过期: 'Expire'
无: 'Nothing'
计算资源: 'Compute'
网络: 'Networking'
存储: 'Storage'
数据库: 'Database'
域名: 'Domain'
其他: 'Others'
过滤器: 'Filter'
重置: 'Reset'
看板管理: 'DashBoard manage'
选择看板: 'Select DashBoard'
在新页面打开grafana: 'Open Grafana On A New Tab'
监控看板: 'Mon DashBoard'
体验版不支持该功能: 'The Trial Version Does Not Support This Features'
主机监控: 'Host Mon'
全局告警事件: 'Global Alarm Event'
屏蔽: 'Mask Messages'
时间: 'Time'
实例: 'Instance'
标题: 'Title'
操作: 'Operation'
服务树继承解除: 'Tree inheritance cancellation'
保存新状态: 'Save New State'
节点主机资源: 'Host Resource'
机器名称: 'Hostname'
类型: 'Type'
内网IP: 'Private IP'
外网IP: 'Internet IP'
客户端版本: 'Client Version'
客户端上一次检测时间: 'Client Last Detection Time'
客户端错误原因: 'Client Error Reason'
当前告警: 'Current Alarm'
开始时间: 'StartAt'
名称: 'Name'
监控对象: 'Instance'
状态: 'Status'
值: 'Value'
查看图表: 'View A Chart'
监控指标采集: 'Collection Of Mon Indicators'
进程: 'Process'
端口: 'Port'
编号: 'ID'
分类: 'Classify'
内容: 'Content'
匹配: 'Matching'
编辑者: 'Editor'
编辑时间: 'EditTime'
添加监控策略: 'Add Mon Strategy'
通过模版添加监控策略: 'Add Mon Strategy By Template'
保存为模板: 'Save As Template'
复制其他服务树节点策略: 'Copy Other Tree Strategy'
清空节点策略: 'Clear Strategy'
监控策略: 'Mon Strategy'
表达式: 'Expression'
告警级别: 'Alarm Level'
概要: 'Summary'
添加报警人: 'Add Alarm User'
添加报警组: 'Add Alarm Group'
添加轮班组: 'Add Alarm Oncall'
通知列表: 'Notify List'
删除: 'Delete'
测试消息通道: 'Test Message Channel'
账户名: 'Acc Name'
创建人: 'Creator'
创建时间: 'Create Time'
监控组成员: 'Members Of Mon group'
描述: 'Describe'
编辑监控报警组成员: 'Edit Mon Alarm Group Members'
添加报警人: 'Add Alarm Member'
成员: 'Member'
取消: 'Cancel'
监控报警组: 'Mon Alarm Group'
确认: 'Confirm'
编辑: 'Edit'
添加告警接收组: 'Add Alarm Receiving group'
添加告警值班组: 'Add Alarm Oncall'
值班表管理: 'Oncall Manage'
值班组: 'Oncall'
值班表: 'Oncall Table'
关闭: 'Close'
值班组日历: 'Oncall Calendar'
一级告警: 'Level 1 Alarm'
二级告警: 'Level 2 Alarm'
三级告警: 'Level 3 Alarm'
四级告警: 'Level 4 Alarm'
标签: 'Tag'
数据最近更新时间: 'Data Latest Update Time'
数据: 'Data'
告警情况: 'Alarm Outline'
告警级别: 'Alarm Level'
告警实例: 'Alarm Instance'
告警名称: 'Alarm Name'
详情: 'Details'
时间: 'Time'
服务树ID: 'TreeID'
利用率低: 'Low Utilization'
警告: 'Warn'
正常: 'Normal'
未知: 'Unkown'
资源利用率低: 'Low Resource Utilization'
资源类型: 'Resource Type'
低利用率天数/14天: 'Low Utilization Days/14 Days'
内存(%): 'Memory(%)'
下载带宽: 'Download Bandwidth'
上传带宽: 'Upload Bandwidth'
最后统计日期: 'Last Statistical Date'
监控邮件列表: 'Mon mail list'
邮件历史: 'Mail History'
账号: 'Account'
日期: 'Date'
级别: 'Level'
已节省人力: 'Labor Saved'
小时: 'Hour'
已执行的自愈任务: 'Self-Healing Tasks Performed'
查看作业: 'View Job'
添加自愈套餐: 'Add Self-Healing'
自愈套餐配置: 'Self-Healing Config'
作业执行状态: 'Task Status'
自愈状态: 'Self-healing State'
自愈套餐名称: 'Self-Healing Name'
自愈套餐: 'Self-healing'
作用IP: 'Affect IP'
自愈作业: 'Self healing job'
查找流水线: 'Find flow'
新建空白流水线: 'New Blank flow'
通过模版建流水线: 'Build Flow by Template'
本节点流水线数量: 'Flow Count'
审计: 'Audit'
别名: 'Alias'
命名空间: 'Namespace'
应用: 'Application'
构建状态: 'CI Status'
测试环境状态: 'Test Env Stat'
线上环境状态: 'Online Env stat'
我可见的流水线: 'Flow Visible To Me'
是: 'Yes'
否: 'No'
服务树名称: 'TreeName'
代码仓库地址: 'Code Warehouse Address'
创建空白流水线: 'Create Blank Flow'
流水线名称: 'FlowName'
通过模版创建流水线: 'Create Flow By Template'
TAG发现: 'TAG version'
展示历史版本: 'Show History'
线上环境发布新版本: 'Deploy Online Env'
测试环境发布新版本: 'Deploy Test Env'
最后一次发布成功的版本为: 'The Last Successful Version'
查看: 'Show'
tag发现时间: 'Tag Time'
触发人: 'Tagger'
发布测试环境: 'Deploy Test Env'
机器(发布中/线上): 'Node(Deploying/Online)'
发布线上环境: 'Deploy Online Env'
耗时: 'Usetime'
构建: 'Build'
停止: 'Stop'
调试: 'Debug'
回滚未配置: 'Rollback Not config'
回滚版本: 'Rollback Version'
已选择不回滚: 'No Rollback Selected'
发布: 'Deploy'
开关: 'Switch'
审计范围内: 'Within Audit'
定时发现tags: 'Auto Find Tags'
自动构建: 'Auto Build'
代码地址: 'Code Address'
tag正则: 'Tag regular Expression'
代码仓库凭据: 'Code Credentials'
依赖: 'Rely On'
编辑依赖: 'Edit Rely'
密码: 'Password'
匹配分支: 'Match Branch'
回调地址: 'Callback URL'
build镜像: 'Build Image'
缓存目录: 'Cache directory'
构建过程中需要缓存的目录,目录相对路径为/build/data: 'The directory to be cached during construction. The relative path of the directory is/build/data'
如nodejs项目构建时可以写“node_modules”,构建时容器中会映射目录/build/data/node_modules: 'For example, "node_modules" can be written when the nodejs project is built, and the container will map the directory /build/data/node_modules'
构建脚本: 'Build Scripts'
构建时候执行的脚本.将构建成功后的文件移动到打包目录内.脚本运行结束后dist目录存在即算构建成功: 'The script that is executed during the build. Move the files that are successfully built to the packaging directory. After the script runs, the dist directory exists, which means the build is successful'
当前脚本:/build/run.项目路径:/build/data.打包目录:/build/dist: 'Current script:/build/run. Project path:/build/data. Packaging directory:/build/dist'
发布类型配置: 'Deploy Type Config'
通用发布: 'General'
触发脚本: 'Trigger Script'
脚本凭据: 'Script Credentials'
k8s集群: 'K8S Cluster'
搜索: 'Search'
不搜索: 'Not Search'
添加: 'Add'
创建: 'Create'
应用名称: 'Apply Name'
多应用: 'Multi Application'
并发数: 'Concurrency Number'
和应用名称同名(系统内置): 'Same name as application name (built-in)'
dockerfile路径: 'Dockerfile Path'
切换: 'Switch'
dockerfile内容: 'Dockerfile Content'
镜像凭据: 'Image Credentials'
镜像类型: 'Image Type'
不构建上传镜像: 'Do not build and upload images'
自定义: 'Custom'
镜像地址: 'Image Address'
提取: 'Extract'
发布审批人: 'Deploy Approver'
自定义发布过程: 'Customize Deploy Process'
消息通知人: 'Message Recipients'
资源限制: 'Resource Limit'
核: 'core'
内存: 'Memory'
兆: 'M'
高级设置: 'Advanced Setting'
构建保存成目录: 'Build Saved As Directory'
当前选择为保存成目录: 'The current selection is Save as Directory'
保存成tar包【常规】: 'Save as tar package [General]'
git使用缓存目录: 'The cache directory used by git'
当前选择为使用缓存目录: 'The current selection is to use the cache directory'
当前选择为不使用缓存目录【常规】: 'The current selection is not to use the cache directory [General]'
构建不发邮件: 'Build No Email'
当前选择为不发邮件: 'The current selection is not to send mail'
当前选择为发送邮件【常规】: 'The current selection is Send Email [General]'
构建不发短信: 'Build No SMS'
当前选择为不发短信: 'No SMS is currently selected'
当前选择为发送短信【常规】: 'The current selection is to send SMS [General]'
发布配置: 'Deploy Configuration'
自动触发线上发布: 'Auto trigger online environment deploying'
自动触发测试发布: 'Auto trigger test environment deploying'
测试分组: 'Test Env Group'
构建后自动触发发布: 'Auto trigger deploying after building'
分组: 'Group'
台机器: 'Machines'
检查机器状态: ''
线上分组: 'Online Env Group'
作业步骤: 'JobStep'
仅第一组: 'First Batch Only'
仅最后一组: 'Last Batch Only'
仅测试: 'Test Env only'
仅线上: 'Online Env Only'
仅发布: 'Deploy Only'
仅回滚: 'Rollback Only'
暂停检查: 'Pause Inspection'
保存: 'Save'
步骤: 'Step'
选择服务器: 'Select Server Node'
分组名称: 'Group Name'
备注: 'Remarks'
分组类型: 'Group Type'
机器列表: 'Node List'
百分比: 'Percentage'
选择机器: 'Select Node'
可以选择，也可以手动输入: 'It can be selected or manually entered'
选择服务器分批: 'Select Server Batching'
输入机器IP: 'Enter the machine IP'
机器列表,用逗号分隔，不同的分批用分号或者换行分隔: 'The machine list is separated by commas, and different batches are separated by semicolons or newlines'
例如: 'For example'
比例输入: 'Input'
本节点的百分比用冒号分割数字或者百分比: 'The percentage of this node is divided into numbers or percentages by colons'
扩展的百分比.每一行是一个大分组；每一行由3段信息组成，用分号分隔（子树id［如：123 、 234 、空字符］，用英文逗号分隔; 机器编号范围［用逗号分隔，用～号标示范围］；百分比，和第一组类型一样: 'Percentage of expansion Each row is a large group; Each line consists of three pieces of information, separated by semicolons (subtree id [such as 123, 234, null characters], separated by English commas; machine number range [separated by commas, marked by ～]; percentage, same as the first group of types'
服务器信息: 'server information'
名称: 'Name'
类型: 'Type'
删除并退出: 'Delete And Exit'
通过IP选择服务器: 'Select Server Via IP'
分组选择: 'Group Selection'
选择变量: 'Select Variable'
手写IP: 'Handwritten IP'
名称: 'Name'
插件: 'Plug-in'
手写IP，可写多个IP。: 'Handwritten IP, multiple IP can be written.'
分隔符：换行符、逗号、空格: 'Separator: line break, comma, space'
全局变量参数: 'Global variable parameters'
变量名称: 'Variable name'
变量默认值: 'Variable Defaults'
变量描述: 'Variable Description'
选项: 'Option'
删除: 'Delete'
作业步骤: 'Job Step'
添加脚本步骤: 'Add Script Step'
添加分发文件步骤: 'Add File Step'
添加审批步骤: 'Add Approval step'
添加kubernetes发布步骤: 'Add Kubernetes Deploy Step'
步骤: 'Step'
脚本: 'Script'
文件: 'File'
审批: 'Approval'
脚本作业: 'Script Job'
作业名称: 'Job Name'
执行账户: 'Execution Account'
服务器类型: 'Server Type'
脚本参数: 'Script Parameters'
复制: 'Copy'
文件作业: 'File Job'
审批作业: 'Approval Job'
审批内容: 'Approval content'
审批人: 'Approver'
新建脚本步骤: 'New Script Step'
不少于2字符: 'Not less than 2 characters'
脚本来源: 'Script Source'
手工录入: 'Manual Entry'
脚本克隆: 'Script Clone'
本地脚本: 'Local Script'
脚本内容: 'Script Content'
自动识别: 'Auto Recognition'
内建插件: 'BuiltIn Plug-in'
内建: 'BuiltIn'
使用凭据: 'Use Credentials'
目标机器: 'Target Machine'
选择服务器: 'Select Server'
脚本参数: 'Script Parameters'
超时时间: 'Timeout'
结束是否暂停: 'Whether to pause at the end'
生效环境: 'Effective Env'
总是执行: 'Always Execute'
测试环境: 'Test Env'
线上环境: 'Online Env'
生效动作: 'Effective Action'
仅发布时执行: 'Execute Only When Deploy'
仅回滚时执行: 'Execute Only When Rollback'
分批: 'Batch'
仅第一个分组: 'First Group Only'
仅最后一个分组: 'Last Group Only'
新建分发文件步骤: 'New File Steps'
作业名称: 'Job Name'
输入作业名称: 'Enter Job Name'
源文件: 'Source file'
注意：本地文件上传会有同名文件覆盖危险: 'Note: Uploading local files will cause the danger of overwriting files with the same name'
选择共享文件: 'Select A Shared File'
选择源服务器文件: 'Select Source Server File'
选择构建文件: 'Select Build File'
文件列表: 'File List'
服务器地址: 'Server Address'
执行账户: 'Execution Account'
构建ID(流水线ID): 'Build ID (flow ID)'
版本: 'Version'
默认空: 'Default Empty'
必选源服务器: 'Required Source Server'
目标文件: 'Target File'
目标路径: 'Target Dir'
输入目标文件路径: 'Enter The Target File Path'
同步delete: 'Synchronize Delete'
必选执行用户: 'Required Execution User'
目标机器: 'Target Machine'
选择服务器: 'Select Server'
必须目标服务器: 'Must Target Server'
必选文件所有者: 'Required File Owner'
文件归属者: 'File Owner'
文件权限: 'File authorization'
输入目标文件权限: 'Enter Target File Permissions'
超时时间必填: 'Timeout Is Required'
构建文件: 'CI File'
服务器文件: 'Server File'
上传文件: 'Upload File'
选择文件: 'Select File'
手动输入: 'Manual Input'
文件名称: 'File Name'
文件名: 'FileName'
大小: 'Size'
创建用户: 'Create User'
创建时间: 'Create Time'
修改用户: 'Edit User'
修改时间: 'Edit Time'
token管理: 'Token manage'
新建审批步骤: 'New Approval Step'
所有审批人都要审批: 'All Approvers Need To Approve'
只要一个人审批: 'Only One user Should Approve'
策略: 'Strategy'
提交人和审批人为同一个人是跳过审批: 'If the submitter and approver are the same person, the approval will be skipped'
如果提交人和审批人为同一个人，可能会升级到上一级领导审批: 'If the submitter and the approver are the same person, they may be upgraded to a higher level leader for approval'
必须审批人审批: 'Must Be Approved By The Approver'
作业: 'Job'
分组: 'Group'
加载中: 'Loading'
过滤: 'Filter'
选择: 'Select'
脚本名称: 'Script Name'
不少于2字符: 'Not less than 2 characters'
脚本来源: 'Script Source'
手工录入: 'Manual Entry'
脚本克隆: 'Script Clone'
本地脚本: 'Local Script'
脚本内容: 'Script Content'
添加用户: 'Add User'
做chown操作，为空的情况下文件最后的归属着和Agent的启动用户有关。: 'The chown operation is performed. If it is empty, the final ownership of the file is related to the startup user of the agent'
做chmod操作，为空的情况下文件权限和系统设置有关。: 'When chmod is empty, file permissions are related to system settings.'
执行: 'Execute'
总数: 'Total'
开始操作: 'Start Operation'
清除: 'Clear'
全选: 'Select All'
请点击选择节点: 'Please click to select a node'
文件管理: 'File manage'
地址: 'Address'
手动输入查询: 'Enter Query Manually'
打开主机终端: 'Open The Host Terminal'
今日任务: "Today's Task"
耗时(秒): 'Time Taken (Seconds)'
主机: 'Host'
信息: 'Information'
路径: 'Path'
操作人: 'Operator'
查询条件: 'Query Criteria'
我: 'Me'
最后修改人: 'Last Modified User'
修改时间: 'Edit Time'
查询: 'Search'
新建作业: 'New Job'
作业列表: 'Job List'
克隆: 'Clone'
关联流水线: 'Associated Flow'
变量: 'Variable'
最后修改时间: 'Last Modified Time'
填写空变量: 'Fill In Blank Variables'
变量名: 'Variable Name'
创建作业: 'Create Job'
全局变量设置: 'Global Variable Settings'
全局变量参数: 'Global variable Parameters'
变量默认值: 'Variable Defaults'
变量描述: 'Variable Description'
立即执行: 'Run Now'
保存作业: 'Save Job'
编辑作业: 'Edit Job'
克隆作业: 'Clone Job'
克隆至目标节点: 'Clone To Target Tree'
克隆节点: 'Clone Node'
获取更新链接: 'Get Update Link'
克隆作业: 'Clone Job'
账户名称: 'Account Name'
账户信息: 'Account Info'
下载: 'Download'
编辑人: 'Editor'
新建脚本: 'New Script'
关联作业: 'Associated Job'
脚本信息: 'Script Info'
分组信息: 'Group info'
插件名称: 'Plugin Name'
新建分组: 'New Group'
新建分批: 'New Batch'
分批列表: 'Batch List'
机器列表: 'Node List'
分组机器列表: 'Group Machine List'
机器名: 'Hostname'
添加机器: 'Add Node'
通知人名称: 'Receiver'
添加报警人: 'Add Receiver'
通知用户: 'Add User'
创建定时任务: 'Create A Scheduled Task'
定时任务: 'Scheduled Tasks'
开始: 'Start'
修改: 'Modify'
规则: 'Rule'
互斥锁: 'Mutex Lock'
修改记录: 'Edit Record'
状态自动监测更新: 'Auto Update Status'
保存新状态: 'Save New Status'
安装代理: 'Install Proxy'
安装AGENT: 'Install Agent'
指定AGENT启动用户: 'Specify The AGENT Startup User'
强制重装: 'Forced Reinstall'
卸载命令【目录删除后AGENT会自动退出】: 'Uninstall command [AGENT will exit automatically after directory deletion]'
代理接口: 'Proxy interface'
安装: 'Install'
部署windowns_exporter服务(window系统): 'Deploy windowns_exporter service (window system)'
一、下载最新版: '1、 Download the latest version'
二、安装（默认端口9128，这里可以通过此方法在安装的时候指定端口）: '2、 Installation (default port 9128, which can be specified during installation)'
三、验证服务: '3、 check service status'
检查65110端口是否启动: 'Check whether the 65110 port is started'
查看服务名为windowns_exporter的服务是否启动: 'Check whether the service named xxx is started'
浏览器访问测试一下: 'Browser access test'
正常: 'Normal'
异常: 'Abnormal'
区域: 'Region'
代理: 'Proxy'
网段: 'Network'
失败次数: 'Fail Count'
理由: 'Reason'
服务树: 'Tree'
导入代理: 'Import Proxy'
选中: 'Selected'
添加网段: 'Add Network'
自定义一个区域: 'Customize A Region'
变量信息: 'Variable Info'
最后编辑人: 'Last Editor'
最后更新时间: 'Last Updated'
刷新: 'Refresh'
服务: 'Service'
集群: 'Cluster'
关联服务树: 'Associated Tree'
集群授权: 'Cluster Auth'
集群备份: 'Cluster Backup'
速度快: 'Fast'
功能多: 'More Features'
显示全部: 'Show All'
发布流水线: 'Flow'
连接测试: 'Connection Test'
修改集群: 'Modify Cluster'
通过yaml创建: 'Created By yaml'
全部: 'All'
添加授权: 'Add Auth'
读权限: 'Read permission'
用户名称: 'UserName'
权限: 'Permission'
'[读+执行]权限(执行权限可以进入pod的shell)': '[Read+Execute] permission (the execution permission can enter the pod shell)'
'[读+写+执行]权限': '[Read+Write+Execute] Permission'
确认添加: 'Confirm Add'
读权限: 'Read permission'
授权: 'Authorization'
'[读+执行]权限': '[Read+Execute] Permission'
'[读+写+执行]权限': '[Read+Write+Execute] Permission'
仅个人可见: 'Only visible to individuals'
读写共享给组内人员: 'Read and write shared to people in my organization'
高级共享配置: 'Advanced Sharing Configuration'
凭据自身编辑权授权: 'Credential self editing authorization'
共享组: 'Shared Group'
读写权限: 'read-write permission'
只读权限: 'Read-only permission'
用户共享: 'User sharing'
插件: 'Plugin'
镜像仓库: 'Image Hub'
适用于: 'For'
用户名: 'Username'
密码: 'Password'
内容: 'Content'
适用于作业内建插件或者构建触发脚本: 'Applicable to job built-in plug-ins or CI trigger scripts'
有写权限才能进入: 'You can only enter with write permission'
宽松的,有读权限即可进入: 'Relaxed, you can enter with read permission'
默认版本: 'Default Version'
云厂商: 'Cloud Vendors'
腾讯云: 'QCloud'
网络代理: 'Network Proxy'
代理安装方式: 'Proxy installation by'
内容: 'Content'
文件内容: 'File Content'
服务地址: 'Service Address'
用户名: 'Username'
密码: 'Password'
保存凭据: 'Save Credentials'
集群节点管理: 'Cluster Node Manage'
执行驱逐操作: 'Execute Cordon Operation'
设置成可调度: 'Set As Schedulable'
设置成不可调度: 'Set As Non Schedulable'
角色: 'Role'
操作系统: 'Operating System (OS)'
内核版本: 'Kernel Version'
容器运行时: 'Container Runtime'
调度设置: 'Scheduling Settings'
驱逐POD: 'Cordon'
污点: 'Taint'
节点污点(Taint)管理: 'Node Taint Manage'
设置污点: 'Set Taint'
从Harbor凭据中获取信息: 'Get Info From Harbor Credentials'
操作协助: 'Operation Assistance'
邮箱: 'Email'
下一步: 'Next step'
导入: 'Import'
标签: 'Label'
数据: 'Data'
返回上一步: 'Back'
提交变更: 'Submit'
文本替换: 'Text Replacement'
操作权限: 'Operation Authority'
配置项: 'Config Item'
备份: 'Backup'
点击立即备份: 'Click Backup Now'
集群管理员: 'Cluster Admin'
普通用户: 'Ordinary users'
全量下载: 'Full download'
应用下载: 'Application Download'
例子: 'Example'
创建流水线: 'Create Flow'
模版: 'Template'
容器: 'Container'
镜像: 'Image'
流水线名称: 'Flow Name'
创建: 'Create'
关联已有流水线: 'Associate Existing Flow'
守护进程集: 'Daemonset'
注解: 'Annotations'
停止等待时间: 'Stop Waiting Time'
添加数据卷: 'Add Data Volume'
清空: 'Clear'
拉取私有镜像管理: 'Pull private image management'
添加已有凭证: 'Add Existing Voucher'
调度: 'Scheduler'
节点亲和性调度: 'Node Affinity Scheduling'
POD亲和性调度: 'POD Affinity Scheduling'
POD反亲和性调度: 'POD Anti Affinity Scheduling'
容忍: 'Tolerate'
不允许调度，已经调度的资源不受影响: 'Scheduling is not allowed, and the resources already scheduled will not be affected'
尽量不调度: 'Try Not To Dispatch'
不允许调度: 'Dispatch Not Allowed'
容器名称: 'Container Name'
获取仓库地址: 'Get Warehouse Address'
镜像拉取策略: 'Image Pull Strategy'
若不设置镜像拉取策略，当镜像版本为空或:latest时，使用Always策略，否则使用IfNotPresent策略: 'If the image pull policy is not set, the Always policy is used when the image version is empty or: latest. Otherwise, the IfNotPresent policy is used'
限制: 'Limit'
Request用于预分配资源，当集群中的节点没有request所要求的资源数量时，容器会创建失败。Limit用于设置容器使用的最大上限，避免异常情况下节点资源消耗过多。: 'Request is used to pre allocate resources. When a node in the cluster does not have the number of resources required by request, the container will fail to be created. Limit is used to set the maximum upper limit of container usage to avoid excessive node resource consumption under abnormal conditions.'
CPU的单位是核心数，内存的单位是字节。: 'The unit of CPU is the number of cores, and the unit of memory is bytes.'
CPU单位：m 或者 不需要单位: 'CPU unit: m or no unit required'
CPU的单位是核心数，内存的单位是字节。: 'The unit of CPU is the number of cores, and the unit of memory is bytes.'
CPU单位：m 或者 不需要单位: 'CPU unit: m or no unit required'
一个容器申请0.5个CPU，就相当于申请1个CPU的一半，可以加个后缀m表示千分之一的概念。比如说100m的CPU，100毫的CPU等同于0.1: 'A container applying for 0.5 CPU is equivalent to applying for half of 1 CPU. You can add a suffix m to represent the concept of one thousandth. For example, a 100m CPU is equivalent to 0.1'
单位: 'Unit'
通常是以1000为换算标准的。: 'Usually, 1000 is the conversion standard.'
通常是以1024为换算标准的。: 'Usually 1024 is used as the conversion standard.'
启动命令: 'Start Command'
命令参数: 'Command Parameters'
环境变量: 'Env Variable'
普通变量: 'Common variable'
变量: 'Variable'
未知变量类型: 'Unknown Variable Type'
设置: 'Set'
未知类型: 'Unknown Type'
卷挂载点: 'Volume Mount Point'
目录: 'Directory'
单个文件: 'Single File'
应用存活探针: 'Apply Survival Probe'
命令行方式: 'Command Line Mode'
请求方式: 'Request Mode'
首次探测时间/秒: 'First Detection Time/s'
探测间隔时间/秒: 'Detection Interval Time/s'
探测超时时间/秒: 'Probe Timeout/sec'
命令行: 'Command Line'
应用就绪探针: 'Application Ready Probe'
命令行方式: 'Command Line Mode'
无状态应用: 'Deployment'
副本数量: 'Number Of Copies'
滚动升级策略: 'Rolling Upgrade Strategy'
高级调度设置: 'Advanced Scheduling Settings'
开放端口: 'Open Port'
当前为不创建: 'Currently Not Created'
当前为需要创建: 'Currently Required To Create'
阈值: 'Threshold'
副本数: 'Number Of Copies'
新版本: 'New Version'
旧版: 'Old Version'
规则: 'Rule'
证书: 'Certificate'
协议: 'Protocol'
新容器: 'New Container'
旧容器: 'Old Container'
路径类型: 'Path Type'
镜像仓库选择: 'Image warehouse selection'
集群和服务树节点关联: 'Cluster and tree association'
流水线自动关联: 'Auto flow association'
手动关联服务树: 'Manually associate the tree'
所有集群: 'All Clusters'
汇总: 'Summary'
集群名称: 'Cluster Name'
错误: 'Error'
升级: 'Upgrade'
手动扩缩容: 'Manual expansion and contraction'
任务名称: 'Task Name'
任务状态: 'Task Status'
任务: 'Task'
是回滚流程: 'Is A Rollback'
结束时间: 'Finish Time'
启动方式: 'Start Way'
执行详情: 'Details'
点击返回流水线: 'Click To Return To The Flow Page'
终止任务: 'Stop Task'
紧急回滚: 'Rollback Now'
回滚: 'Rollback'
不回滚: 'NotRollback'
已过期不可回滚: 'Expired And Cannot Be Rollback'
发布任务: 'DeployTask'
启动人: 'Operator'
忽略错误: 'Ignore Error'
执行确认: 'Execution confirmation'
重试: 'Retry'
忽略: 'Ignore'
终止: 'Stop'
回滚任务: 'Task Rollback'
任务执行日志: 'Task Execution Log'
日志详情: 'Log Details'
任务类型: 'Task Type'
基本信息: 'Basic info'
执行结果: 'Results Of Execution'
任务日志: 'Task Log'
调用变量: 'Call Variable'
作业步骤: 'Job Step'
脚本作业: 'Script Job'
作业名称: 'Job Name'
执行主机数: 'Execution Hosts'
作业日志: 'Job Log'
执行时间: 'Execution Time'
重做: 'Redo'
执行节点: 'Execution Node'
执行命令: 'Execution Command'
命令执行日志: 'Command Execution Log'
用户数: 'User Count'
添加行数: 'Add Rows'
删除行数: 'Deleted rows'
提交次数: 'Commit Count'
数据最近更新时间: 'Data Latest Update Time'
项目: 'Project'
代码行数增删情况: 'Add/Del Of Code Lines'
提交行数: 'Commit Lines'
提交时间: 'Commit Time'
提交编号: 'Commit Id'
有效提交: 'Valid Commit'
提交人: 'Submitter'
提交地址: 'Address'
打包次数: 'CI Count'
测试环境发布: 'Test Env Deploy'
发版次数: 'Deploy Count'
回滚次数: 'Rollback Count'
趋势图: 'Trend Chart'
服务树编号: 'Tree ID'
流水线编号: 'Flow ID'
发布地址: 'Flow Address'
通知出口开关设置: 'Notify Switch Setting'
邮件: 'Email'
短信: 'Sms'
语音: 'Voice'
页面执行作业: 'Page Execution Job'
执行成功: 'Execution succeeded'
执行失败: 'Execution failed'
等待用户: 'Waiting for users'
分组启动作业: 'Group Job'
定时启动作业: 'Crontab Job'
构建任务: 'CI Task'
发布任务: 'Flow Task'
审批: 'Approval'
审批事件: 'Approval Event'
监控系统: 'Mon System'
告警通知: 'Alarm Notify'
邮件内容监控: 'Email content Mon'
作业任务通知模版: 'Job Task notify Template'
邮件模板: 'Email Template'
邮件标题: 'Email Title'
邮件内容: 'Email Content'
短信模板: 'Sms Template'
短信内容: 'Sms Content'
构建通知模版: 'CI Build Notify Template'
发布通知模版: 'Deploy Notify Template'
审批通知模版: 'Approval Notify Template'
监控系统告警通知模版: 'Mon System Alarm Notify Template'
语音模板: 'Voice Template'
语音内容: 'Voice Content'
监控系统邮件内容监控通知模版: 'Mon system email content monitoring notify template'
系统参数管理: 'System parameter manage'
持续构建: 'Continuous Build'
自动构建: 'Auto Build'
默认是1。如果是0时，发现的tag都不进行自动构建。: 'The default is 1. If it is 0, the tags will not be automatically findtag.'
默认: 'Default'
间隔: 'Interval'
秒: 'Second'
当时间间隔为0时表示不开启该服务: 'When the time interval is 0, the service will not be started'
单个构建默认CPU限制(核): 'Default CPU limit for single build (core)'
最多使用的cpu核数，可以是小数，如 1.5 : 'The maximum cpu cores used to CI build, such as 1.5'
单个构建默认内存限制: 'Default memory limit for a single build'
单个构建中最多使用的内存,单位是兆: 'The most memory used in a single build, in megabytes'
可以分配给构建任务的所有内存: 'All memory that can be allocated to the build task'
内存会被分配给任务，内存不够分配时，构建任务会排队等待: 'Memory will be allocated to tasks. When memory is insufficient for allocation, construction tasks will queue up'
流水线默认显示版本数量: 'Number of versions displayed by flow by default'
需要reload服务后生效: 'Takes effect after reload service is required'
上传: 'Upload'
地址: 'Address'
QA系统联动: 'QA System Linkage'
回调: 'Callback'
返回结果匹配内容: 'Return result matching content'
集群设置: 'Cluster Settings'
列表: 'List'
登录: 'Login'
登录验证方式: 'Login authentication method'
主机名: 'Hostname'
用户: 'User'
基础: 'Base'
组角色: 'Group Role'
管理员: 'Admin'
运维: 'OM'
研发: 'RD'
保留先验证本地用户: 'Keep authenticating local users first'
连接器缓存: 'Connector Cache'
缓存超时: 'Cache Timeout'
监控模式: 'Monitor model'
主机: 'Host'
使用公网IP监控的网段: 'Network segment monitored using public IP'
对象存储类型: 'Object Storage Type'
监控代理: 'Monitor Proxy'
代理服务树节点: 'Proxy Service Tree ID'
指定服务树中某个节点作为数据库监控的代理配置: 'Specify a node in the service tree as the agent configuration for database monitoring'
同步: 'Synchronization'
同步间隔: 'Synchronization Interval'
导入服务树结构: 'Import Service Tree Structure'
导入服务树绑定关系: 'Import Service Tree Binding Relationship'
摄取: 'Ingestion'
主机摄取: 'Ingestion Node'
严格: 'strict'
默认是0。只读权限即可以访问; 是1时，运维可以访问本服务树节点，管理员可以访问全局。: 'The default is 0. Read only permission can be accessed; When it is 1, the O&M can access this service tree node, and the administrator can access the global.'
产品负责人: 'Product Owner'
运维负责人: 'OM owner'
所属部门: 'Department'
资源名称: 'Resource Name'
系统监控信息: 'System monitoring info'
监控指标: 'Monitoring metric'
时间: 'Time'
审计日志: 'Audit Log'
具体内容: 'Content Detail'
可见度: 'Visibility'
存放位置: 'Storage location'
本服务树: 'This Service Tree'
全局可见: 'Globally visible'
全部导入: 'Import All'
用户地址簿管理: 'User Address Book Manage'
添加通信地址: 'Add User Address'
地址簿: 'Address Book'
邮箱地址: 'E-mail address'
手机号: 'Phone number'
语音信箱: 'Voice mailbox'
更新时间: 'Update time'
添加用户地址簿: 'Add User Address'
撤销: 'Revoke'
分钟: 'Minute'
过期时间: 'Expiration Time'
作用对象: 'Target'
解除继承的列表: 'Uninherited List'
用户部门关系绑定: 'User department relation binding'
添加用户部门关联: 'Add user department association'
用户部门关联关系: 'User department association'
部门: 'Department'
绑定用户部门关联关系: 'Bind user department association'
私有节点管理: 'Private node management'
添加用户: 'Add User'
管理机器: 'Manage machines'
任务监视器: 'Task Monitor'
内存使用: 'Memory Usage'
剩余: 'Surplus'
队列: 'Queue'
正在运行: 'Running'
流水线ID: 'Flow ID'
TAG版本: 'TAG Version'
运行节点: 'Task Slave'
CPU限制(核): 'CPU limit(core)'
内存限制(兆): 'Memory limit(M)'
队列序号: 'Queue ID'
网络监视器: 'Network Watcher'
代理网络: 'Proxy Network'
流水线网络: 'Flow Network'
流水线ID: 'Flow ID'
检测时间: 'Detection Time'
测试环境节点: 'Test Env Node'
测试环境节点错误: 'Test Env Node Error'
线上环境节点: 'Online environment node'
线上环境节点错误: 'Online Env Node Error'
整个系统的审批: 'Approval of the whole system'
尚未发送: 'Not Sent Yet'
创建中: 'Creating'
同意: 'Agree'
未审批: 'Unapproved'
拒绝: 'Refuse'
审批: 'Approval'
查看: 'Show More'
协助操作人: 'Assistant Operator'
审批名称: 'Approval Name'
OA单号: 'OA Case ID'
通知状态: 'Notify Status'
审批状态: 'Approval Status'
云监控: 'Cloud Mon'
配置: 'configure'
聚云立方对接: 'juyun docking'
聚云连接器初始化: 'juyun connector initialization'
连接器配置管理: 'Connector config manage'
历史连接器: 'History Connector'
连接器切换: 'Connector Switching'
保存后生效: 'Effective After Saving'
获取用户信息: 'Get User Info'
用户登出: 'User Logout'
修改密码: 'Change Password'
用户服务树: 'UserTree'
全量服务树: 'FullTree'
服务树资源: 'Tree Resource'
权限控制: 'Permission Control'
消息出口: 'Message Channel'
审批接口: 'Approval Interface'
外部辅助审批: 'External Auxiliary Approval'
工单扩展: 'Trouble Ticketing System Extension'
用户详情: 'User Details'
连接器存活检测: 'Connector Survival Detection'
探活地址: 'Exploring Address'
前端风格: 'Front End Style'
选择前端风格: 'Choose A Front End Style'
连接器设置: 'Connector Settings'
调试日志: 'Debug Log'
接口缓存: 'Interface Cache'
仅使用作业系统: 'Use job system only'
使用原生: 'Use native'
合并: 'Merge'
可登录用户: 'Users who can log in'
非本地用户: 'Non local users'
重置密码: 'Reset Password'
危险: 'Danger'
密码未修改: 'Password not modified'
添加权限: 'Add Permission'
用户权限: 'User Permission'
全局: 'Global'
服务树相关: 'Tree correlation'
服务树名: 'Treename'
服务树编辑: 'Edit Tree'
添加节点: 'Add Node'
删除节点: 'Delete Node'
私有节点不能在服务树中编辑: 'Private nodes cannot be edited in the tree'
服务器资源: 'Server Resources'
更多待收藏: 'More Favorites'
我收藏的流水线: 'My Favorite Flow'
我的: 'My'
我的告警事件: 'My Alarm Events'
我请求的协助: 'Assistance I Requested'
需要我协助: 'Need My Help'
申请详情: 'Details'
申请理由: 'Reasons For Applying'
处理答复: 'Reply'
提交: 'Submit'
新建凭据: 'New Credential '
凭据: 'Credential '
凭据名称: 'Credential Name'
自建: 'build by oneself'
用户名密码: 'Username Password'
编辑凭据: 'Edit Credential'
查看凭据: 'Show Credential'
新建镜像: 'New Image'
镜像: 'Image'
镜像名称: 'Image Name'
授权: 'to grant authorization'
镜像文件信息: 'Image File Information'
上传时间: 'Upload Time'
镜像大小: 'Image Size'
上传镜像: 'Upload Image'
查看镜像生成方式: 'View Image Generation way'
添加公钥: 'Add Public Key'
保存镜像: 'Save Image'
公开所有人可见: 'Visible to public'
共享给组内人员: 'Shared with my organization'
系统代码更新: 'System Update'
版本: 'Version'
更新: 'Update'
更新内容: 'Update Content'
修改个人密码: 'Change personal password'
原密码: 'Original Password'
新密码: 'New Password'
重复新密码: 'Repeat New Password'
两个新密码不一致: 'The two new passwords are inconsistent'
修改密码: 'Change Password'
机器: 'Machine'
发布步骤: 'Deploy Step'
步骤: 'Step'
发布版本: 'Deploy Version'
版本描述: 'Version Info'
回滚版本: 'Rollback Version'
最后一次成功发布的版本: 'Last successful release'
发布的任务: 'Deploy Task'
点击使用: 'Click To Use'
没有发现可回滚版本，请手动填写回滚版本: 'No rollback version found, please fill in the rollback version manually'
无需回滚: 'No rollback required'
选择服务器批次: 'Select Server Batch'
用户登录名: 'Account Login Name'
机器IP: 'Node IP'
任务uuid: 'Task uuid'
任务名称关键字: 'Task Name Keyword'
创建人全称: 'Full name of creator'

名称,必填项，允许小写字母/数字/短横线组成: 'Name, required, lowercase letters/numbers/dash allowed'
域名,请勿以http或https开头，直接填写域名或IP即可: 'Domain name, please do not start with http or https, just fill in the domain name or IP directly'

节点标签Key: 'Node label key'
挂载文件时写文件路径: 'Write the file path when mounting the file'
源字符串: 'Source String'
目标字符串: 'Target String'
输入删除的名称: 'Enter the name of the deletion'
百分比: 'percentage'
IP地址: 'IP address'
最小: 'min'
最大: 'max'
用户名称，OA账号: 'User name, OA account'
集群关键字: 'Cluster Keyword'
用户,如果用户名已经存在会进行覆盖: 'The user name will be overwritten if it already exists'
部门英文名称,仅支持【英文+数字+“.@_-”】: 'English name of the department, which only supports 【English+number+“ .@_- ”】'
语音信箱,为空时为和手机号一致: 'Voice mailbox, when it is blank, it is consistent with the mobile phone number'
把本凭据的编辑权共享给他人,多个人用逗号分隔: 'Share the editing right of this credential to others, and separate multiple people with commas'
填写任务变量: 'Fill in task variables'
本节点看板管理: 'Dashboard management of this node'
看板名称: 'DashBoard Name'
看板url地址: 'DashBoard url'
添加看板: 'Add DashBoard'
URL地址: 'URL Address'
默认打开: 'Open by default'
描述信息，可以写中文: 'Description information can be written in Chinese'
克隆到其他服务树: 'Clone to another service tree'
克隆到: 'Clone To'
添加到收藏夹: 'Add To Favorites'
我给该流水线的别名: 'I give the alias of the flow'
流水线别名: 'Flow Alias'
另存为模版: 'Save As Template'
git地址、svn地址、openc3文件: 'Git address, svn address, openc3 file'
tag的正则表达式,空的情况下会拉取所有的tag: 'The regular expression of tag. If it is empty, all tag will be pulled'
多个分支用逗号分开: 'Multiple branches separated by commas'
构建完成后触发脚本: 'Trigger script after building'
构建情况通知人，多个人用逗号分隔: 'Recipients of the construction situation are separated by commas'
生效的IP，为空情况下为全部匹配: 'Valid IP addresses. If it is blank, all IP addresses will be matched'
邮件监控项: 'Mail monitoring item'
添加邮件监控: 'Add mail monitoring'
输入文件地址: 'Enter File Path'
请填写分发路径: 'Please fill in the distribution path'
注意：本地文件上传会用同名文件覆盖危险: 'Note: The local file upload will overwrite the danger with the file with the same name'
执行超时时间，单位为秒，默认60秒: 'Execution timeout, in seconds, 60 seconds by default'
监控值班组描述: 'Monitoring group description'
组名: 'Group Name'
监控策略: 'Mon Strategy'
监控名称: 'Mon Name'
模式: 'mode'
简单: 'simple'
绑定服务树: 'Binding Tree'
继承关系解除: 'Termination of inheritance'
自定义: 'Custom'
条件: 'Condition'
指标名: 'Metric Name'
比较: 'Compare'
普罗米修斯表达式: 'Prometheus Expression'
告警级别: 'Alarm Level'
仅用于展示: 'For Page Show Only'
业务500报警: 'HTTP 500 Alarm'
告警显示的值: 'Value of alarm display'
电话: 'Phone'
一级: 'Level 1'
二级: 'Level 2'
三级: 'Level 3'
四级: 'Level 4'
持续时间: 'time of duration'
添加监控指标采集: 'Add monitoring indicator collection'
监控指标采集: 'Collection of monitoring indicators'
要采集的端口，多个用英文逗号分隔: 'The ports to be collected are separated by English commas'
用途: 'use to'
监控端口死活, 监控端口是否对外开放。: 'Monitor whether the port is alive or not.'
端口状态，有如下三种状态: 'The port states are as follows'
端口没在监听状态: 'The port is not listening'
有端口活动，可能监听的是127.0.0.1: 'There is port activity, which may be listening to 127.0.0.1'
端口监听在0.0.0.0上，对外开放: 'The port listens on 0.0.0.0 and is open to the public'
说明: 'explain'
可以用ss -t -l -n查看tcp端口，ss -u -l -n 为udp。: 'You can use ss - t - l - n to view the tcp port. ss - u - l - n is udp.'
'采集过程中把如 *:80 、:::8080 的状态设置为2。': 'Set the status of *:80,:::8080 to 2 during acquisition.'
方式: 'way'
进程名: 'Process name'
启动命令行: 'Start Command Line'
进程: 'process'
进程死活监控，进程重启监控。: 'Monitor the process life and death, and monitor the process restart.'
指标: 'metric'
匹配到的进程的数量: 'Number of processes matched'
进程名: 'Process name'
监控方式: 'Monitoring method'
启动命令行: 'Start Command Line'
不同方式区别: 'Different ways'
name为进程名，可以通过 ps -p $pid -o comm查看。: 'Name is the process name, which can be viewed through ps -p $pid -o comm'
cmdline为启动命令行，可以通过ps -p $pid -o cmd查看。: 'Cmdline is the startup command line, which can be viewed through ps -p $pid -o cmd'
支持的字符: 'Supported characters'
监控HTTP服务。: 'Monitoring HTTP services.'
返回码: 'Return code'
请求耗时，单位为毫秒: 'Request time, in milliseconds'
返回的内容和配置的是否匹配: 'Whether the returned content matches the configured content'
路径类型: 'Path Type'
软链接: 'Soft link'
判断文件或者目录是否存在。判断软链接是否存在，判断软链接的内容是否匹配。: 'Determine whether the file or directory exists. Determine whether the soft link exists and whether the content of the soft link matches.'
路径是否存在: 'Whether the path exists'
收集用户自己上报的指标。: 'Collect the indicators reported by users themselves.'
监控的AGENT安装后，会在本地监听65110端口。: 'After the monitored AGENT is installed, it will listen to port 65110 locally.'
把要上报的数据上报到本地该端口，系统会定时收集。: 'Report the data to be reported to the local port, and the system will collect it regularly.'
上报方式如下: 'The reporting method is as follows'
上报后的数据如下: 'The reported data are as follows'
被当作一个普通的标签。: 'is regarded as a common label.'
source标签是系统默认添加的，用于区分是通过api push而来的数据。: 'The source tag is added by the system by default, which is used to distinguish the data from the api push.'
tags中的标签会变成一个或者多个标签。: 'The tags in tags will become one or more tags.'
字段: 'field'
metric和value是必要的，endpoint和tags非必要。: 'Metric and value are necessary, while endpoint and tags are unnecessary.'
兼容: 'compatible'
'注：push 方式60秒为周期，如果60秒内没有上报新的数据，本地AGENT会把该指标删除。': 'Note: 60 seconds is the cycle of push mode. If no new data is reported within 60 seconds, the local AGENT will delete this indicator.'
添加部门组: 'Add Department Group'
监控报警组描述: 'Monitoring Alarm Group Description'
报警组成员帐号: 'Alarm group member account'
操作协助: 'Operation assistance'
协助人: 'assistancer'
申请操作理由: 'Reason for operation'
编辑分组: 'Edit Group'
分组名称: 'Group Name'
分组类型: 'Group Type'
根据机器名分组: 'Group by machine name'
根据机器类型分组: 'Group by machine type'
确认修改: 'Confirm'
分组名称关键字: 'Group Name Keyword'
插件名称: 'Plug-in name'
创建人全称: 'Full name of creator'
作业名称关键字: 'Job Name Keyword'
编辑人全称: 'Full name of editor'
添加分组: 'Add Group'
机器名称包含的字符: 'Characters contained in the hostname'
'格式：机器IP or 机器名::内网IP or 机器名::内网IP::外网IP': 'Format: MachineIP or Hostname::IntranetIP or Hostname::IntranetIP::InternetIP'
脚本名称关键字: 'Script Name Keyword'
新区域: 'New Region'
任务执行结束后是否暂停，如果不填，则表示不停止。: 'Whether to pause after task execution is completed. If it is not filled, it means not to stop.'
文件关键字: 'File Keyword'
成功后调用作业: 'Call job after success'
上传文件后调用job: 'Call the job after uploading the file'
常用作业: 'Common job'
通过token上传: 'Upload via token'
定时任务名称: 'crontab name'
账户关键字: 'Account Keyword'
新建账户名: 'Account Name'
编辑yaml: 'Edit yaml'
复制模版: 'Copy Template'
添加Path: 'Add Path'
添加规则: 'Add Rule'
添加容器: 'Add Container'
显示高级配置: 'Show Advanced Configuration'
点击去关联: 'Click to disassociate'
点击进行关联: 'Click to associate'
添加UDP端口: 'Add UDP Port'
添加TCP端口: 'Add TCP Port'
添加容忍规则: 'Add Tolerance Rule'
添加反亲和POD信息: 'Add anti affinity POD information'
添加亲和POD信息: 'Add affinity POD information'
隐藏高级配置: 'Hide Advanced Configuration'
添加persistentVolumeClaim: 'Add persistentVolumeClaim'
添加configMap: 'Add configMap'
添加secret: 'Add secret'
添加nfs: 'Add nfs'
添加hostPath: 'Add hostPath'
添加emptyDir: 'Add emptyDir'
添加注解: 'Add Annotations'
添加标签: 'Add Labels'
请通过其他方式删除: 'Please delete it in other ways'
无编辑权限: 'No editing permission'
无查看权限: 'No permission to view'
添加端口: 'Add Port'
选择该仓库: 'Select the warehouse'
添加数据: 'Add Data'
查看POD日志: 'Show POD Log'
手写: 'Handwritten'
进入: 'Goto'
收藏: 'Favorites'
取消收藏: 'Cancel Favorites'
复制为: 'Copy As'
选择: 'Select'
手写版本: 'Handwritten Version'
选择版本: 'Select Version'
删除看版: 'Delete Dashboard'
进入POD虚拟终端: 'Enter the POD terminal'
创建流水线: 'Create Flow'
编辑YAML: 'Edit YAML'
添加HPA: 'Add HPA'
扩缩容: 'Expansion and contraction capacity'
插队: 'Queue jumping'
去掉默认打开: 'Remove Default Open'
设置成默认打开: 'Set as default open'
复制流水线到其他服务树下: 'Copy the flow to another service tree'
修改名称: 'Modify Name'
另存为模版: 'Save as Template'
系统内置: 'Builtin'
立马重新检测: 'Retest immediately'
添加变量: 'Add Variable'
查看代码地址帮助: 'View Code Address Help'
删除依赖: 'Delete Dependencies'
没有配置: 'No configuration'
请先进行构建: 'Please build first'
测试: 'Test'
编辑配置: 'Edit Configuration'
停止所有未进行的构建: 'Stop all pending builds'
查看记录: 'View Records'
显示配置: 'Display Configuration'
隐藏配置: 'Hide Configuration'
查看脚本帮助: 'View Script Help'
查看凭据帮助: 'View Credential Help'
发布kubernetes服务: 'Deploy kubernetes Server'
查看镜像生成方式: 'View Image Generation Way'
删除区域: 'Delete Region'
删除网段: 'Delete network'
查看客户端内置命令帮助: 'View the client built-in command help'
编辑组成员: 'Edit Group Members'
图表: 'Chart'
详情: 'details'
添加网段: 'Add network'
值班日历: 'Duty day'
删除文件: 'Delete File'
返回上一层: 'Back'
开启后，同步文件夹时删除DEST中SRC没有的文件: 'When enabled, delete files not found in SRC in DEST when synchronizing folders'
添加代理: 'Add Proxy'
查看审批内容使用变量帮助: 'View Approval Content Usage Variable Help'
重试任务: 'Debug Task'
回到流水线页面: 'Back to Flow Page'
确认忽略该分组: 'Confirm to ignore this group'
添加挂载点: 'Add mount point'
清空环境变量: 'Clear environment variables'
添加Field环境变量: 'Add Field variables'
添加Secret环境变量: 'Add Secret variables'
添加ConfigMap环境变量: 'Add ConfigMap variables'
添加普通环境变量: 'Add common variables'
自动获取Namepspace下所有凭证: 'Automatically obtain all vouchers under Namepspace'
添加凭证: 'Add Certificate'
创建secret: 'Create secret'
创建service: 'Create service'
不创建service: 'Do not create service'
创建ConfigMap: 'Create ConfigMap'
创建HPA: 'Create HPA'
创建守护进程集: 'Create Daemonset'
创建无状态应用: 'Create Deployment'
关联集群: 'Associated cluster'
创建Service: 'Create Service'
创建Ingress: 'Create Ingress'
取消搜索: 'Cancel Search'
管理集群ConfigMap: 'Manage Cluster ConfigMap'
管理集群Secret: 'Manage Cluster Secret'
看版管理: 'Manage Dashboard'
管理集群节点: 'Manage Cluster Node'
集群授权: 'Cluster authorization'
重置查询条件: 'Reset Query Criteria'
添加集群: 'Add Cluster'
点击不发送短信: 'Click not to send SMS'
点击不发送邮件: 'Click not to send Email'
点击发起发送邮件: 'Click Send Email'
点击不使用缓存目录: 'Click Do Not Use Cache Directory'
自定义步骤: 'Custom Steps'
点击存成文件: 'Click Save as File'
点击存成目录: 'Click Save as Directory'
重定义触发脚本: 'Redefine trigger script'
点击发起发送短信: 'Click Send SMS'
创建应用: 'Create an server'
新建Harbor凭据: 'New Harbor Credential'
编辑测试分组: 'Edit Test Group'
编辑线上分组: 'Edit Online Group'
搜索集群: 'Search Cluster'
切换，运维配置dockerfile: 'Switching, operation and maintenance configuration dockerfile'
测试能否连接上集群: 'Test whether the cluster can be connected'
切换，使用代码仓库中的dockerfile: ''
看镜像生成方式: 'show image generation way'
导入集群: 'Import Cluster'
发布多个应用: 'Publish multiple applications'
发布单个应用: 'Publish a single application'
导入本节点所有JOB: 'Import all JOBs in this node'
修改记录: 'Edit Record'
轻应用使用的位置: 'Location of light application'
创建命名空间: 'Create Namespace'
添加机器: 'Add Machine'
查看Tag的发现情况: 'View the discovery of tags'
添加命名空间: 'Add Namespace'
新建应用: 'Create application'
显示所有历史版本: 'Show all historical versions'
点击从服务树选择机器: 'Click to select a machine from the service tree'
编辑本集群凭据: 'Edit this cluster credential'
从容器中提取镜像信息: 'Extract image information from container'
从凭据中提取镜像信息: 'Extract image information from credentials'
点击使用缓存目录: 'Click Use Cache Directory'
目标路径以‘/’结尾代表一个目录，不以‘/’结尾表示一个文件。如：/tmp/表示将文件保存到此目录下，/tmp/test.txt表示将文件保存到此目录下，文件名为test.txt: 'The destination path ending with ‘/’ represents a directory and not a file. For example,/tmp/means to save the file to this directory,/tmp/test.txt means to save the file to this directory, and the file name is test.txt'
研发角色: 'RD role'
运维角色: 'OM role'
审批拒绝: 'refuse'
等待: 'waiting'
计划任务: 'crontab'
页面: 'page'
完成: 'done'
未发送: 'Not sent yet'
发送中: 'Sending'
日志: 'Log'
报警组: 'Alarm group'
轮班组: 'Oncall'
部门组: 'Department'
待办: 'todo'
操作失败: 'fail'
已完成: 'done'
已拒绝: 'refuse'
已取消: 'cancel'
有: 'have'
CMDB: CMDB
外部数据: 'NodeExt'
帮助: Help
采集主机上其他服务的metrics: 'Collect the metrics of other services on the host'
请输入版本后几位数字确认码: 'Please enter the last few digits of the version, confirmation code'
子组: 'subgroup'
转工单: 'ToCase'
监控转工单: 'Alert to Case'
默认使用的工单系统: 'Default TT System'
0是内部工单，1是外部工单: '0 is an internal tt, 1 is an external tt'
系统备份: 'Sys Backup'
工单地址: 'TT Address'
外部工单系统: 'External TT System'
关联工单: 'Bind TT'
工单查看: 'TT View'
告警中: 'Alarming'
其他工具: 'OtherTool'
单点登录云控制台: 'Sign-on Cloud Console'
点击进入: 'Click To Enter'
进入管理页面: 'Goto Manage'
进程已经运行的时间，单位秒。: 'The time that the process has run, in seconds.'
目标服务器: 'Target Server'
BPM任务: 'BpmTasks'
BPM单号: 'BpmUuid'
已办任务: 'Tasks'
表单信息: 'Form Fields'
权限共享: 'Auth Share'
共享组成员编辑权限: 'Sharing group member edit permission'
非第一个分组: 'Not First Group'
非最后一个分组: 'Not Last Group'
非第一组: 'Not First Batch'
非最后一组: 'Not Last Batch'
重新编辑表单: 'Re Edit Form'
重新保存: 'Re Save'
登录管理(内置): 'Login Manage (builtin)'
服务树(内置): 'Tree (builtin)'
消息出口(内置): 'Mesg (builtin)'
新建账户: 'Create Account'
处理人: 'Handler'
执行脚本: 'Scripts'
开始执行: 'Run'
处理时间: 'Time'
容器端口: 'Container Port'
编辑镜像: 'Edit Mirror'
检查机器状态: 'Check machine status'
环境: 'Env'
关联: 'Relation'
用法: 'Usage'
切换，使用代码仓库中的dockerfile: 'Switch to use the dockerfile in the code warehouse'
是否匹配: 'Match Check'
